name: Update llms.txt

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch: # Allow manual triggering
  repository_dispatch: # Allow external triggers
    types: [update-llms]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-llms:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install dependencies and setup env
        run: |
          python -m venv .venv
          . .venv/bin/activate
          python -m pip install --upgrade pip
          pip install build hatchling

      - name: Debug environment
        run: |
          pwd
          ls -la
          echo "Python path:"
          python -c "import sys; print('\n'.join(sys.path))"
          echo "Pip list:"
          pip list

      - name: Install llmstxt
        run: |
          . .venv/bin/activate
          if [ "${{ github.event_name }}" = "repository_dispatch" ]; then
            # For remote repositories, use the given repository
            git clone https://github.com/ngmisl/llmstxt.git /tmp/llmstxt
            cd /tmp/llmstxt
            pip install -e .
            cd -
          else
            # For local repository, install llmstxt locally
            pip install -e .
          fi
          # Debug installation
          echo "Package location:"
          pip show llmstxt
          echo "Python path after install:"
          python -c "import sys; print('\n'.join(sys.path))"
          echo "Package content:"
          ls -R .venv/lib/python*/site-packages/llmstxt*
          # Verify installation
          python -c "import llmstxt; print(f'llmstxt version: {llmstxt.__version__}')"

      - name: Generate llms.txt for current repository
        if: github.event_name != 'repository_dispatch'
        shell: bash
        run: |
          . .venv/bin/activate
          PYTHONPATH=$PWD python -c "from llmstxt import generate_llms_txt; generate_llms_txt()"

      - name: Generate llms.txt for target repository
        if: github.event_name == 'repository_dispatch'
        shell: bash
        run: |
          . .venv/bin/activate
          git clone ${{ github.event.client_payload.repository }} target_repo
          cd target_repo
          PYTHONPATH=$PWD python -c "from llmstxt import generate_llms_txt; generate_llms_txt()"

      - name: Check for changes
        id: changes
        run: |
          git diff --quiet llms.txt
          if [ $? -ne 0 ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: update llms.txt"
          title: "chore: update llms.txt"
          body: |
            This PR updates the llms.txt file with the latest code compression.

            Changes were automatically generated by [llmstxt](https://github.com/ngmisl/llmstxt).
          branch: update-llms
          delete-branch: true
